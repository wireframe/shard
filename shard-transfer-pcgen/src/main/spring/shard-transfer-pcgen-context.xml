<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>


	<bean id="application"
		class="org.springframework.richclient.application.Application">
		<constructor-arg index="0">
			<ref bean="applicationDescriptor"/>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="lifecycleAdvisor"/>
		</constructor-arg>
	</bean>

	<bean id="lifecycleAdvisor"
		class="org.springframework.richclient.application.config.DefaultApplicationLifecycleAdvisor">
		<property name="windowCommandBarDefinitions">
			<value>shard-transfer-pcgen-commands-context.xml</value>
		</property>
		<property name="startingPageId">
			<value>listDatasetsView</value>
		</property>
	</bean>

	<bean id="applicationDescriptor"
		class="com.codecrate.shard.ui.ShardApplicationDescriptor">
	</bean>

	<bean id="applicationObjectConfigurer"
		class="org.springframework.richclient.application.config.DefaultApplicationObjectConfigurer">
		<constructor-arg index="0">
			<ref bean="messageSource"/>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="imageSource"/>
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="iconSource"/>
		</constructor-arg>
	</bean>

	<bean id="applicationEventMulticaster"
		class="org.springframework.context.event.SimpleApplicationEventMulticaster"/>

	<bean id="componentFactory"
		class="org.springframework.richclient.factory.DefaultComponentFactory">
		<property name="iconSource">
			<ref bean="iconSource"/>
		</property>
		<property name="messageSource">
			<ref bean="messageSource"/>
		</property>
	</bean>

	<bean id="lookAndFeelConfigurer"
		class="org.springframework.richclient.application.config.JGoodiesLooksConfigurer">
		<property name="theme">
			<bean class="com.jgoodies.looks.plastic.theme.ExperienceBlue"/>
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
				<value>org.springframework.richclient.application.messages</value>
			</list>
		</property>
	</bean>

	<bean id="imageResourcesFactory"
		class="org.springframework.context.support.ResourceMapFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:org/springframework/richclient/image/images.properties</value>
				<value>classpath:images.properties</value>
			</list>
		</property>
		<property name="resourceBasePath">
			<value>images/</value>
		</property>
	</bean>

	<bean id="imageSource"
		class="org.springframework.richclient.image.DefaultImageSource">
		<constructor-arg index="0">
			<ref bean="imageResourcesFactory"/>
		</constructor-arg>
		<property name="brokenImageIndicator">
			<value>images/alert/error_obj.gif</value>
		</property>
	</bean>

	<bean id="iconSource"
		class="org.springframework.richclient.image.DefaultIconSource">
		<constructor-arg index="0">
			<ref bean="imageSource"/>
		</constructor-arg>
	</bean>

	<bean id="formComponentInterceptorFactory"
		class="org.springframework.richclient.form.builder.support.ChainedInterceptorFactory">
		<property name="interceptorFactories">
			<list>
				<bean class="org.springframework.richclient.form.builder.support.ColorValidationInterceptorFactory">
					<property name="errorColor">
						<value>255,245,245</value>
					</property>
				</bean>
				<bean class="org.springframework.richclient.form.builder.support.OverlayValidationInterceptorFactory"/>
				<bean class="org.springframework.richclient.text.TextComponentPopupInterceptorFactory"/>
				<bean class="org.springframework.richclient.list.ComboBoxAutoCompletionInterceptorFactory">
					<property name="messageSource">
						<ref bean="messageSource"/>
					</property>
				</bean>
			</list>
		</property>
	</bean>

    <bean id="formPropertyFaceDescriptorSource"
		class="org.springframework.binding.form.support.MessageSourceFormPropertyFaceDescriptorSource"/>

    <bean id="binderSelectionStrategy"
        class="org.springframework.richclient.form.binding.swing.SwingBinderSelectionStrategy">
    </bean>

    <bean id="listDatasetsView"
		class="org.springframework.richclient.application.support.LookupViewDescriptor">
		<property name="viewPrototypeBeanName">
			<value>listDatasets</value>
		</property>
	</bean>

	<bean id="listDatasets"
	    class="com.codecrate.shard.ui.view.ListDatasetsView"
	    singleton="false">
	    <constructor-arg>
		    <ref bean="objectImporter" />
	    </constructor-arg>
	</bean>


	<!-- object importer definition -->
    <bean id="sourceLineHandler" class="com.codecrate.shard.transfer.pcgen.PcgenSourceLineHandler">
	  <constructor-arg><ref bean="sourceDao" /></constructor-arg>
	  <constructor-arg><ref bean="sourceDao" /></constructor-arg>
    </bean>

	<bean id="skillImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenSkillLineHandler">
		    <constructor-arg><ref bean="skillDao" /></constructor-arg>
		    <constructor-arg><ref bean="skillDao" /></constructor-arg>
		    <constructor-arg><ref bean="abilityDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="featImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenFeatLineHandler">
		    <constructor-arg><ref bean="featDao" /></constructor-arg>
		    <constructor-arg><ref bean="featDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="spellImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenSpellLineHandler">
		    <constructor-arg><ref bean="spellDao" /></constructor-arg>
		    <constructor-arg><ref bean="spellDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="itemImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenItemLineHandler">
		    <constructor-arg><ref bean="itemDao" /></constructor-arg>
		    <constructor-arg><ref bean="itemDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="raceImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenRaceLineHandler">
		    <constructor-arg><ref bean="raceDao" /></constructor-arg>
		    <constructor-arg><ref bean="raceDao" /></constructor-arg>
		    <constructor-arg><ref bean="characterClassDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="characterClassImporter" class="com.codecrate.shard.transfer.pcgen.PcgenObjectImporter">
	  <constructor-arg>
	    <bean class="com.codecrate.shard.transfer.pcgen.PcgenCharacterClassLineHandler">
		    <constructor-arg><ref bean="characterClassDao" /></constructor-arg>
		    <constructor-arg><ref bean="characterClassDao" /></constructor-arg>
		    <constructor-arg><ref bean="skillDao" /></constructor-arg>
		</bean>
	  </constructor-arg>
	  <constructor-arg><ref bean="sourceLineHandler" /></constructor-arg>
	</bean>

    <bean id="objectImporter"
    	class="com.codecrate.shard.transfer.pcgen.PcgenDatasetImporter">
	    <constructor-arg>
		    <map>
		      <entry>
		        <key><value>equip</value></key>
		        <ref bean="itemImporter" />
		      </entry>
		      <entry>
		        <key><value>skills</value></key>
		        <ref bean="skillImporter" />
		      </entry>
		      <entry>
		        <key><value>feats</value></key>
		        <ref bean="featImporter" />
		      </entry>
		      <entry>
		        <key><value>classes</value></key>
		        <ref bean="characterClassImporter" />
		      </entry>
		      <entry>
		        <key><value>race</value></key>
		        <ref bean="raceImporter" />
		      </entry>
		      <entry>
		        <key><value>spells</value></key>
		        <ref bean="spellImporter" />
		      </entry>
		    </map>
	    </constructor-arg>
	</bean>
</beans>
